{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc t\\u1EADp\\\\College\\\\CRP\\\\project\\\\Virtual-Assistant-with-Gemini-API-1\\\\fe\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport VoiceRecorder from \"./components/VoiceRecorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([{\n    user: \"\",\n    bot: \"Hello my master. How can I help you today?\"\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingDots, setLoadingDots] = useState(\".\");\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcribingDots, setTranscribingDots] = useState(\".\");\n\n  // Loading animation effect\n  useEffect(() => {\n    let interval;\n    if (isLoading) {\n      interval = setInterval(() => {\n        setLoadingDots(prev => {\n          switch (prev) {\n            case \".\":\n              return \"..\";\n            case \"..\":\n              return \"...\";\n            case \"...\":\n              return \"..\";\n            default:\n              return \".\";\n          }\n        });\n      }, 500);\n    }\n    return () => clearInterval(interval);\n  }, [isLoading]);\n\n  // Add another useEffect for transcribing animation\n  useEffect(() => {\n    let interval;\n    if (isTranscribing) {\n      interval = setInterval(() => {\n        setTranscribingDots(prev => {\n          switch (prev) {\n            case \".\":\n              return \"..\";\n            case \"..\":\n              return \"...\";\n            case \"...\":\n              return \"..\";\n            default:\n              return \".\";\n          }\n        });\n      }, 500);\n    }\n    return () => clearInterval(interval);\n  }, [isTranscribing]);\n  const handleSendMessage = async () => {\n    if (!message.trim()) return;\n\n    // Immediately add user message and loading state\n    const userMessage = message;\n    setMessage(\"\"); // Clear input immediately\n    setChatHistory(prev => [...prev, {\n      user: userMessage,\n      bot: loadingDots\n    }]);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage\n        })\n      });\n      const data = await response.json();\n\n      // Update the last message with the actual response\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = data.response;\n        return newHistory;\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Update the last message with error state if needed\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = \"Sorry, I encountered an error. Please try again.\";\n        return newHistory;\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVoiceRecording = async (duration, transcript) => {\n    // Ki·ªÉm tra transcript c√≥ h·ª£p l·ªá kh√¥ng\n    if (!transcript || transcript.trim() === '') {\n      setChatHistory(prev => [...prev, {\n        user: \"üé§ Kh√¥ng nh·∫≠n ƒë∆∞·ª£c gi·ªçng n√≥i, vui l√≤ng th·ª≠ l·∫°i\",\n        bot: \"Xin l·ªói, t√¥i kh√¥ng nghe r√µ. B·∫°n c√≥ th·ªÉ n√≥i l·∫°i ƒë∆∞·ª£c kh√¥ng?\"\n      }]);\n      return;\n    }\n\n    // Clean up the transcript\n    const cleanTranscript = transcript.replace(/\\*\\*Speaker [A-Z]:\\*\\*/g, '').replace(/Speaker [A-Z]:/g, '').replace(/Please provide the audio file/g, '').replace(/I need the audio/g, '').replace(/^\\s+|\\s+$/g, '') // C·∫£i thi·ªán vi·ªác x√≥a kho·∫£ng tr·∫Øng\n    .replace(/\\s+/g, ' '); // Chu·∫©n h√≥a kho·∫£ng tr·∫Øng\n\n    try {\n      // Hi·ªÉn th·ªã tr·∫°ng th√°i transcribing\n      setIsTranscribing(true);\n      setChatHistory(prev => [...prev, {\n        user: `üé§ ƒêang x·ª≠ l√Ω${transcribingDots}`,\n        bot: \"\"\n      }]);\n\n      // Th√™m timeout ƒë·ªÉ tr√°nh request qu√° nhanh\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // C·∫≠p nh·∫≠t transcript\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1] = {\n          user: `üé§ \"${cleanTranscript}\" (${duration.toFixed(1)}s)`,\n          bot: loadingDots\n        };\n        return newHistory;\n      });\n      setIsTranscribing(false);\n      setIsLoading(true);\n\n      // G·ª≠i request v·ªõi retry logic\n      let retries = 2;\n      let response;\n      while (retries > 0) {\n        try {\n          response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              message: cleanTranscript,\n              source: \"voice_command\"\n            })\n          });\n          if (response.ok) break;\n          retries--;\n        } catch (error) {\n          retries--;\n          if (retries === 0) throw error;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n      if (!response || !response.ok) {\n        throw new Error('Failed to get response from server');\n      }\n      const data = await response.json();\n\n      // C·∫≠p nh·∫≠t chat history\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = data.response;\n        return newHistory;\n      });\n\n      // Ph√°t √¢m thanh ph·∫£n h·ªìi v·ªõi x·ª≠ l√Ω l·ªói\n      try {\n        const speech = new SpeechSynthesisUtterance(data.response);\n        speech.onend = () => {\n          window.speechSynthesis.cancel(); // ƒê·∫£m b·∫£o d·ªçn d·∫πp\n        };\n        speech.onerror = () => {\n          console.error('Speech synthesis error');\n          window.speechSynthesis.cancel();\n        };\n        window.speechSynthesis.speak(speech);\n      } catch (speechError) {\n        console.error('Speech synthesis failed:', speechError);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1] = {\n          user: \"üé§ L·ªói x·ª≠ l√Ω gi·ªçng n√≥i\",\n          bot: \"Xin l·ªói, c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.\"\n        };\n        return newHistory;\n      });\n    } finally {\n      setIsTranscribing(false);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      backgroundColor: \"#f0f2f5\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        backgroundColor: \"#343a40\",\n        display: \"flex\",\n        padding: \"1rem\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginRight: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.png\",\n          alt: \"Logo\",\n          style: {\n            height: \"40px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#fff\",\n            fontSize: \"1.2rem\"\n          },\n          children: \"Virtual Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          style: {\n            color: \"#fff\",\n            margin: \"0 15px\",\n            textDecoration: \"none\"\n          },\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/transcribe\",\n          style: {\n            color: \"#fff\",\n            margin: \"0 15px\",\n            textDecoration: \"none\"\n          },\n          children: \"Transcribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/document_processing\",\n          style: {\n            color: \"#fff\",\n            margin: \"0 15px\",\n            textDecoration: \"none\"\n          },\n          children: \"Document Processing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"800px\",\n        margin: \"2rem auto\",\n        padding: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          marginBottom: \"1.5rem\"\n        },\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#fff\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n          padding: \"16px\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\",\n            maxHeight: \"400px\",\n            overflowY: \"auto\",\n            padding: \"10px\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"4px\"\n          },\n          children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [chat.user && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginBottom: \"8px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  backgroundColor: \"#e9ecef\",\n                  color: \"#000\",\n                  padding: \"8px 12px\",\n                  borderRadius: \"12px\",\n                  display: \"inline-block\",\n                  maxWidth: \"80%\",\n                  margin: 0,\n                  wordWrap: \"break-word\"\n                },\n                children: isTranscribing && index === chatHistory.length - 1 ? `üé§ Transcribing${transcribingDots}` : chat.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  backgroundColor: \"#e9ecef\",\n                  padding: \"8px 12px\",\n                  borderRadius: \"12px\",\n                  display: \"inline-block\",\n                  maxWidth: \"80%\",\n                  margin: 0,\n                  wordWrap: \"break-word\"\n                },\n                children: isLoading && index === chatHistory.length - 1 ? loadingDots : chat.bot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type your message\",\n            style: {\n              flex: 1,\n              padding: \"10px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ced4da\"\n            },\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            style: {\n              padding: \"10px 20px\",\n              borderRadius: \"4px\",\n              backgroundColor: \"#6c757d\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: \"pointer\",\n              transition: \"background-color 0.3s ease\"\n            },\n            onMouseOver: e => e.currentTarget.style.backgroundColor = \"#5a6268\",\n            onMouseOut: e => e.currentTarget.style.backgroundColor = \"#6c757d\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VoiceRecorder, {\n            onRecordingComplete: handleVoiceRecording\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+PWVWxP5RPwzHQh50i0+nqLebHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Link","VoiceRecorder","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatHistory","setChatHistory","user","bot","isLoading","setIsLoading","loadingDots","setLoadingDots","isTranscribing","setIsTranscribing","transcribingDots","setTranscribingDots","interval","setInterval","prev","clearInterval","handleSendMessage","trim","userMessage","response","fetch","method","headers","body","JSON","stringify","data","json","newHistory","length","error","console","handleVoiceRecording","duration","transcript","cleanTranscript","replace","Promise","resolve","setTimeout","toFixed","retries","source","ok","Error","speech","SpeechSynthesisUtterance","onend","window","speechSynthesis","cancel","onerror","speak","speechError","style","fontFamily","backgroundColor","minHeight","children","display","padding","alignItems","marginRight","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","justifyContent","flex","to","margin","textDecoration","maxWidth","textAlign","marginBottom","borderRadius","boxShadow","maxHeight","overflowY","map","chat","index","wordWrap","gap","type","value","onChange","e","target","placeholder","border","onKeyPress","key","onClick","cursor","transition","onMouseOver","currentTarget","onMouseOut","onRecordingComplete","_c","$RefreshReg$"],"sources":["E:/H·ªçc t·∫≠p/College/CRP/project/Virtual-Assistant-with-Gemini-API-1/fe/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VoiceRecorder from \"./components/VoiceRecorder\";\r\n\r\nconst App: React.FC = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState<{ user: string; bot: string }[]>([\r\n    { user: \"\", bot: \"Hello my master. How can I help you today?\" }\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingDots, setLoadingDots] = useState(\".\");\r\n  const [isTranscribing, setIsTranscribing] = useState(false);\r\n  const [transcribingDots, setTranscribingDots] = useState(\".\");\r\n\r\n  // Loading animation effect\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (isLoading) {\r\n      interval = setInterval(() => {\r\n        setLoadingDots(prev => {\r\n          switch (prev) {\r\n            case \".\": return \"..\";\r\n            case \"..\": return \"...\";\r\n            case \"...\": return \"..\";\r\n            default: return \".\";\r\n          }\r\n        });\r\n      }, 500);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isLoading]);\r\n\r\n  // Add another useEffect for transcribing animation\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (isTranscribing) {\r\n      interval = setInterval(() => {\r\n        setTranscribingDots(prev => {\r\n          switch (prev) {\r\n            case \".\": return \"..\";\r\n            case \"..\": return \"...\";\r\n            case \"...\": return \"..\";\r\n            default: return \".\";\r\n          }\r\n        });\r\n      }, 500);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isTranscribing]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    // Immediately add user message and loading state\r\n    const userMessage = message;\r\n    setMessage(\"\"); // Clear input immediately\r\n    setChatHistory(prev => [...prev, { user: userMessage, bot: loadingDots }]);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: userMessage }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      // Update the last message with the actual response\r\n      setChatHistory(prev => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot = data.response;\r\n        return newHistory;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      // Update the last message with error state if needed\r\n      setChatHistory(prev => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot = \"Sorry, I encountered an error. Please try again.\";\r\n        return newHistory;\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceRecording = async (duration: number, transcript: string) => {\r\n    // Ki·ªÉm tra transcript c√≥ h·ª£p l·ªá kh√¥ng\r\n    if (!transcript || transcript.trim() === '') {\r\n      setChatHistory(prev => [...prev, {\r\n        user: \"üé§ Kh√¥ng nh·∫≠n ƒë∆∞·ª£c gi·ªçng n√≥i, vui l√≤ng th·ª≠ l·∫°i\",\r\n        bot: \"Xin l·ªói, t√¥i kh√¥ng nghe r√µ. B·∫°n c√≥ th·ªÉ n√≥i l·∫°i ƒë∆∞·ª£c kh√¥ng?\"\r\n      }]);\r\n      return;\r\n    }\r\n\r\n    // Clean up the transcript\r\n    const cleanTranscript = transcript\r\n      .replace(/\\*\\*Speaker [A-Z]:\\*\\*/g, '')\r\n      .replace(/Speaker [A-Z]:/g, '')\r\n      .replace(/Please provide the audio file/g, '')\r\n      .replace(/I need the audio/g, '')\r\n      .replace(/^\\s+|\\s+$/g, '')  // C·∫£i thi·ªán vi·ªác x√≥a kho·∫£ng tr·∫Øng\r\n      .replace(/\\s+/g, ' ');      // Chu·∫©n h√≥a kho·∫£ng tr·∫Øng\r\n\r\n    try {\r\n      // Hi·ªÉn th·ªã tr·∫°ng th√°i transcribing\r\n      setIsTranscribing(true);\r\n      setChatHistory(prev => [...prev, {\r\n        user: `üé§ ƒêang x·ª≠ l√Ω${transcribingDots}`,\r\n        bot: \"\"\r\n      }]);\r\n\r\n      // Th√™m timeout ƒë·ªÉ tr√°nh request qu√° nhanh\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n      // C·∫≠p nh·∫≠t transcript\r\n      setChatHistory(prev => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1] = {\r\n          user: `üé§ \"${cleanTranscript}\" (${duration.toFixed(1)}s)`,\r\n          bot: loadingDots\r\n        };\r\n        return newHistory;\r\n      });\r\n      setIsTranscribing(false);\r\n      setIsLoading(true);\r\n\r\n      // G·ª≠i request v·ªõi retry logic\r\n      let retries = 2;\r\n      let response;\r\n      while (retries > 0) {\r\n        try {\r\n          response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              message: cleanTranscript,\r\n              source: \"voice_command\"\r\n            }),\r\n          });\r\n          if (response.ok) break;\r\n          retries--;\r\n        } catch (error) {\r\n          retries--;\r\n          if (retries === 0) throw error;\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        }\r\n      }\r\n\r\n      if (!response || !response.ok) {\r\n        throw new Error('Failed to get response from server');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // C·∫≠p nh·∫≠t chat history\r\n      setChatHistory(prev => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot = data.response;\r\n        return newHistory;\r\n      });\r\n\r\n      // Ph√°t √¢m thanh ph·∫£n h·ªìi v·ªõi x·ª≠ l√Ω l·ªói\r\n      try {\r\n        const speech = new SpeechSynthesisUtterance(data.response);\r\n        speech.onend = () => {\r\n          window.speechSynthesis.cancel(); // ƒê·∫£m b·∫£o d·ªçn d·∫πp\r\n        };\r\n        speech.onerror = () => {\r\n          console.error('Speech synthesis error');\r\n          window.speechSynthesis.cancel();\r\n        };\r\n        window.speechSynthesis.speak(speech);\r\n      } catch (speechError) {\r\n        console.error('Speech synthesis failed:', speechError);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setChatHistory(prev => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1] = {\r\n          user: \"üé§ L·ªói x·ª≠ l√Ω gi·ªçng n√≥i\",\r\n          bot: \"Xin l·ªói, c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.\"\r\n        };\r\n        return newHistory;\r\n      });\r\n    } finally {\r\n      setIsTranscribing(false);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"Arial, sans-serif\", backgroundColor: \"#f0f2f5\", minHeight: \"100vh\" }}>\r\n      {/* Navbar */}\r\n      <nav style={{ backgroundColor: \"#343a40\", display: \"flex\", padding: \"1rem\", alignItems: \"center\" }}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"20px\" }}>\r\n          <img \r\n            src=\"/logo.png\" \r\n            alt=\"Logo\" \r\n            style={{ height: \"40px\", marginRight: \"10px\" }} \r\n          />\r\n          <span style={{ color: \"#fff\", fontSize: \"1.2rem\" }}>Virtual Assistant</span>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", flex: 1 }}>\r\n          <Link to=\"/\" style={{ color: \"#fff\", margin: \"0 15px\", textDecoration: \"none\" }}>Chatbot</Link>\r\n          <Link to=\"/dashboard/transcribe\" style={{ color: \"#fff\", margin: \"0 15px\", textDecoration: \"none\" }}>Transcribe</Link>\r\n          <Link to=\"/dashboard/document_processing\" style={{ color: \"#fff\", margin: \"0 15px\", textDecoration: \"none\" }}>Document Processing</Link>\r\n        </div>\r\n      </nav>\r\n\r\n      <div style={{ maxWidth: \"800px\", margin: \"2rem auto\", padding: \"1rem\" }}>\r\n        <h1 style={{ textAlign: \"center\", marginBottom: \"1.5rem\" }}>Chatbot</h1>\r\n        <div style={{\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n          padding: \"16px\",\r\n          marginBottom: \"20px\"\r\n        }}>\r\n          <div style={{ \r\n            marginBottom: \"20px\", \r\n            maxHeight: \"400px\", \r\n            overflowY: \"auto\",\r\n            padding: \"10px\",\r\n            backgroundColor: \"#f9f9f9\",\r\n            borderRadius: \"4px\"\r\n          }}>\r\n            {chatHistory.map((chat, index) => (\r\n              <div key={index} style={{ marginBottom: \"15px\" }}>\r\n                {chat.user && (\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"8px\" }}>\r\n                    <p style={{ \r\n                      backgroundColor: \"#e9ecef\", \r\n                      color: \"#000\", \r\n                      padding: \"8px 12px\", \r\n                      borderRadius: \"12px\",\r\n                      display: \"inline-block\",\r\n                      maxWidth: \"80%\",\r\n                      margin: 0,\r\n                      wordWrap: \"break-word\"\r\n                    }}>\r\n                      {isTranscribing && index === chatHistory.length - 1 \r\n                        ? `üé§ Transcribing${transcribingDots}`\r\n                        : chat.user}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n                <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n                  <p style={{ \r\n                    backgroundColor: \"#e9ecef\", \r\n                    padding: \"8px 12px\", \r\n                    borderRadius: \"12px\",\r\n                    display: \"inline-block\",\r\n                    maxWidth: \"80%\",\r\n                    margin: 0,\r\n                    wordWrap: \"break-word\"\r\n                  }}>\r\n                    {isLoading && index === chatHistory.length - 1 ? loadingDots : chat.bot}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n            <input\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"Type your message\"\r\n              style={{\r\n                flex: 1,\r\n                padding: \"10px\",\r\n                borderRadius: \"4px\",\r\n                border: \"1px solid #ced4da\"\r\n              }}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            />\r\n            <button\r\n              onClick={handleSendMessage}\r\n              style={{\r\n                padding: \"10px 20px\",\r\n                borderRadius: \"4px\",\r\n                backgroundColor: \"#6c757d\",\r\n                color: \"#fff\",\r\n                border: \"none\",\r\n                cursor: \"pointer\",\r\n                transition: \"background-color 0.3s ease\"\r\n              }}\r\n              onMouseOver={(e) => (e.currentTarget.style.backgroundColor = \"#5a6268\")}\r\n              onMouseOut={(e) => (e.currentTarget.style.backgroundColor = \"#6c757d\")}\r\n            >\r\n              Send\r\n            </button>\r\n            <VoiceRecorder onRecordingComplete={handleVoiceRecording} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}