{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc t\\u1EADp\\\\College\\\\CRP\\\\project\\\\Virtual-Assistant-with-Gemini-API-1\\\\fe\\\\src\\\\components\\\\SpeechToText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Extend the Window interface to include SpeechRecognition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = ({\n  onTranscript\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const startListening = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\"; // Set language\n    recognition.interimResults = false; // Only final results\n\n    recognition.onstart = () => setIsListening(true);\n    recognition.onresult = event => {\n      const result = event.results[0][0].transcript;\n      onTranscript(result); // Send transcript to parent component\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error: \", event.error);\n    };\n    recognition.onend = () => setIsListening(false);\n    recognition.start(); // Start listening\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: isListening,\n      style: {\n        padding: \"10px 20px\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#6c757d\",\n        color: \"#fff\",\n        border: \"none\",\n        cursor: \"pointer\",\n        transition: \"background-color 0.3s ease\"\n      },\n      onMouseOver: e => e.currentTarget.style.backgroundColor = \"#5a6268\",\n      onMouseOut: e => e.currentTarget.style.backgroundColor = \"#6c757d\",\n      children: isListening ? \"Listening...\" : \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"DrvbTpAutob4ffscqUSCDvG+gE8=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SpeechToText","onTranscript","_s","isListening","setIsListening","startListening","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","onstart","onresult","event","result","results","transcript","onerror","console","error","onend","start","children","onClick","disabled","style","padding","borderRadius","backgroundColor","color","border","cursor","transition","onMouseOver","e","currentTarget","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Học tập/College/CRP/project/Virtual-Assistant-with-Gemini-API-1/fe/src/components/SpeechToText.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface SpeechToTextProps {\r\n  onTranscript: (transcript: string) => void;\r\n}\r\n\r\n// Extend the Window interface to include SpeechRecognition\r\ndeclare global {\r\n  interface Window {\r\n    SpeechRecognition: any;\r\n    webkitSpeechRecognition: any;\r\n  }\r\n}\r\n\r\nconst SpeechToText: React.FC<SpeechToTextProps> = ({ onTranscript }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n\r\n  const startListening = () => {\r\n    const recognition =\r\n      new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognition.lang = \"en-US\"; // Set language\r\n    recognition.interimResults = false; // Only final results\r\n\r\n    recognition.onstart = () => setIsListening(true);\r\n\r\n    recognition.onresult = (event: any) => {\r\n      const result = event.results[0][0].transcript;\r\n      onTranscript(result); // Send transcript to parent component\r\n    };\r\n\r\n    recognition.onerror = (event: any) => {\r\n      console.error(\"Speech recognition error: \", event.error);\r\n    };\r\n\r\n    recognition.onend = () => setIsListening(false);\r\n\r\n    recognition.start(); // Start listening\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={startListening}\r\n        disabled={isListening}\r\n        style={{\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"4px\",\r\n          backgroundColor: \"#6c757d\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n          transition: \"background-color 0.3s ease\",\r\n        }}\r\n        onMouseOver={(e) => (e.currentTarget.style.backgroundColor = \"#5a6268\")}\r\n        onMouseOut={(e) => (e.currentTarget.style.backgroundColor = \"#6c757d\")}\r\n      >\r\n        {isListening ? \"Listening...\" : \"Start Listening\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAMvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GACf,KAAKC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC;IACpEH,WAAW,CAACI,IAAI,GAAG,OAAO,CAAC,CAAC;IAC5BJ,WAAW,CAACK,cAAc,GAAG,KAAK,CAAC,CAAC;;IAEpCL,WAAW,CAACM,OAAO,GAAG,MAAMR,cAAc,CAAC,IAAI,CAAC;IAEhDE,WAAW,CAACO,QAAQ,GAAIC,KAAU,IAAK;MACrC,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;MAC7ChB,YAAY,CAACc,MAAM,CAAC,CAAC,CAAC;IACxB,CAAC;IAEDT,WAAW,CAACY,OAAO,GAAIJ,KAAU,IAAK;MACpCK,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEN,KAAK,CAACM,KAAK,CAAC;IAC1D,CAAC;IAEDd,WAAW,CAACe,KAAK,GAAG,MAAMjB,cAAc,CAAC,KAAK,CAAC;IAE/CE,WAAW,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MACEyB,OAAO,EAAEnB,cAAe;MACxBoB,QAAQ,EAAEtB,WAAY;MACtBuB,KAAK,EAAE;QACLC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAE;MACd,CAAE;MACFC,WAAW,EAAGC,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACV,KAAK,CAACG,eAAe,GAAG,SAAW;MACxEQ,UAAU,EAAGF,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACV,KAAK,CAACG,eAAe,GAAG,SAAW;MAAAN,QAAA,EAEtEpB,WAAW,GAAG,cAAc,GAAG;IAAiB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvC,EAAA,CA9CIF,YAAyC;AAAA0C,EAAA,GAAzC1C,YAAyC;AAgD/C,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}