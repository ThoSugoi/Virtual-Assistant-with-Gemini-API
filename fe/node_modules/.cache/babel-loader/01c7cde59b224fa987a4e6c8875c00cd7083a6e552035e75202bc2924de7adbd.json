{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc t\\u1EADp\\\\College\\\\CRP\\\\project\\\\Virtual-Assistant-with-Gemini-API-1\\\\fe\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport VoiceRecorder from \"./components/VoiceRecorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([{\n    user: \"\",\n    bot: \"Hello my skibidi master. How can I help you today?\"\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingDots, setLoadingDots] = useState(\".\");\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcribingDots, setTranscribingDots] = useState(\".\");\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true); // State to toggle speech synthesis\n\n  useEffect(() => {\n    let interval;\n    if (isLoading) {\n      interval = setInterval(() => {\n        setLoadingDots(prev => prev === \"...\" ? \".\" : prev + \".\");\n      }, 500);\n    }\n    return () => clearInterval(interval);\n  }, [isLoading]);\n  useEffect(() => {\n    let interval;\n    if (isTranscribing) {\n      interval = setInterval(() => {\n        setTranscribingDots(prev => prev === \"...\" ? \".\" : prev + \".\");\n      }, 500);\n    }\n    return () => clearInterval(interval);\n  }, [isTranscribing]);\n  const handleSendMessage = async () => {\n    if (!message.trim()) return;\n    const userMessage = message.trim();\n    setMessage(\"\");\n    setChatHistory(prev => [...prev, {\n      user: userMessage,\n      bot: loadingDots\n    }]);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userMessage\n        })\n      });\n      const data = await response.json();\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = data.response;\n        return newHistory;\n      });\n      if (isSpeechEnabled) {\n        const speech = new SpeechSynthesisUtterance(data.response);\n        window.speechSynthesis.speak(speech);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = \"Sorry, I encountered an error. Please try again.\";\n        return newHistory;\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVoiceRecording = async (duration, transcript) => {\n    const cleanTranscript = transcript.trim();\n    setIsTranscribing(true);\n    setChatHistory(prev => [...prev, {\n      user: `🎤 \"${cleanTranscript}\"`,\n      bot: loadingDots\n    }]);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: cleanTranscript,\n          source: \"voice_command\"\n        })\n      });\n      const data = await response.json();\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = data.response;\n        return newHistory;\n      });\n      if (isSpeechEnabled) {\n        const speech = new SpeechSynthesisUtterance(data.response);\n        window.speechSynthesis.speak(speech);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setChatHistory(prev => {\n        const newHistory = [...prev];\n        newHistory[newHistory.length - 1].bot = \"Sorry, I encountered an error. Please try again.\";\n        return newHistory;\n      });\n    } finally {\n      setIsTranscribing(false);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSpeechEnabled(!isSpeechEnabled),\n          children: isSpeechEnabled ? \"Disable Voice\" : \"Enable Voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => e.key === \"Enter\" && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VoiceRecorder, {\n          onRecordingComplete: handleVoiceRecording\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"V1oWbWrZdIbLDAdoZ04D8AKxfMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","VoiceRecorder","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatHistory","setChatHistory","user","bot","isLoading","setIsLoading","loadingDots","setLoadingDots","isTranscribing","setIsTranscribing","transcribingDots","setTranscribingDots","isSpeechEnabled","setIsSpeechEnabled","interval","setInterval","prev","clearInterval","handleSendMessage","trim","userMessage","response","fetch","method","headers","body","JSON","stringify","data","json","newHistory","length","speech","SpeechSynthesisUtterance","window","speechSynthesis","speak","error","console","handleVoiceRecording","duration","transcript","cleanTranscript","source","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","onKeyPress","key","onRecordingComplete","_c","$RefreshReg$"],"sources":["E:/Học tập/College/CRP/project/Virtual-Assistant-with-Gemini-API-1/fe/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VoiceRecorder from \"./components/VoiceRecorder\";\r\n\r\nconst App: React.FC = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState<{ user: string; bot: string }[]>([\r\n    { user: \"\", bot: \"Hello my skibidi master. How can I help you today?\" },\r\n  ]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingDots, setLoadingDots] = useState(\".\");\r\n  const [isTranscribing, setIsTranscribing] = useState(false);\r\n  const [transcribingDots, setTranscribingDots] = useState(\".\");\r\n  const [isSpeechEnabled, setIsSpeechEnabled] = useState(true); // State to toggle speech synthesis\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (isLoading) {\r\n      interval = setInterval(() => {\r\n        setLoadingDots((prev) => (prev === \"...\" ? \".\" : prev + \".\"));\r\n      }, 500);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (isTranscribing) {\r\n      interval = setInterval(() => {\r\n        setTranscribingDots((prev) => (prev === \"...\" ? \".\" : prev + \".\"));\r\n      }, 500);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isTranscribing]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    const userMessage = message.trim();\r\n    setMessage(\"\"); \r\n    setChatHistory((prev) => [...prev, { user: userMessage, bot: loadingDots }]);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: userMessage }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      setChatHistory((prev) => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot = data.response;\r\n        return newHistory;\r\n      });\r\n\r\n      if (isSpeechEnabled) {\r\n        const speech = new SpeechSynthesisUtterance(data.response);\r\n        window.speechSynthesis.speak(speech);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setChatHistory((prev) => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot =\r\n          \"Sorry, I encountered an error. Please try again.\";\r\n        return newHistory;\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceRecording = async (duration: number, transcript: string) => {\r\n    const cleanTranscript = transcript.trim();\r\n    setIsTranscribing(true);\r\n    setChatHistory((prev) => [...prev, { user: `🎤 \"${cleanTranscript}\"`, bot: loadingDots }]);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: cleanTranscript, source: \"voice_command\" }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      setChatHistory((prev) => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot = data.response;\r\n        return newHistory;\r\n      });\r\n\r\n      if (isSpeechEnabled) {\r\n        const speech = new SpeechSynthesisUtterance(data.response);\r\n        window.speechSynthesis.speak(speech);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setChatHistory((prev) => {\r\n        const newHistory = [...prev];\r\n        newHistory[newHistory.length - 1].bot =\r\n          \"Sorry, I encountered an error. Please try again.\";\r\n        return newHistory;\r\n      });\r\n    } finally {\r\n      setIsTranscribing(false);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        {/* Navigation Links */}\r\n      </nav>\r\n      <div>\r\n        <h1>Chatbot</h1>\r\n        <div>\r\n          <button onClick={() => setIsSpeechEnabled(!isSpeechEnabled)}>\r\n            {isSpeechEnabled ? \"Disable Voice\" : \"Enable Voice\"}\r\n          </button>\r\n        </div>\r\n        <div>\r\n          {/* Chat History */}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n          />\r\n          <button onClick={handleSendMessage}>Send</button>\r\n          <VoiceRecorder onRecordingComplete={handleVoiceRecording} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}