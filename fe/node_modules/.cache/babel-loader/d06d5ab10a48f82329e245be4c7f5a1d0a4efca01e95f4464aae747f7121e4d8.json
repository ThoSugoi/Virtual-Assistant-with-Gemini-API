{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc t\\u1EADp\\\\College\\\\CRP\\\\project\\\\Virtual-Assistant-with-Gemini-API-1\\\\fe\\\\src\\\\components\\\\SpeechToText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Extend the Window interface to include SpeechRecognition\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = ({\n  onTranscript\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognition, setRecognition] = useState(null);\n  const toggleListening = () => {\n    if (isListening) {\n      // Stop listening\n      recognition === null || recognition === void 0 ? void 0 : recognition.stop();\n    } else {\n      // Start listening\n      const newRecognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n      newRecognition.lang = \"en-US\"; // Set language\n      newRecognition.interimResults = false; // Only final results\n\n      newRecognition.onstart = () => setIsListening(true);\n      newRecognition.onresult = event => {\n        const result = event.results[0][0].transcript;\n        onTranscript(result); // Send transcript to parent component\n      };\n      newRecognition.onerror = event => {\n        console.error(\"Speech recognition error: \", event.error);\n      };\n      newRecognition.onend = () => setIsListening(false);\n      newRecognition.start(); // Start listening\n      setRecognition(newRecognition);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      style: {\n        padding: \"10px 20px\",\n        borderRadius: \"4px\",\n        backgroundColor: isListening ? \"#28a745\" : \"#007bff\",\n        color: \"#fff\",\n        border: \"none\",\n        cursor: \"pointer\",\n        transition: \"background-color 0.3s ease\",\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n      },\n      onMouseOver: e => e.currentTarget.style.backgroundColor = isListening ? \"#218838\" : \"#0056b3\",\n      onMouseOut: e => e.currentTarget.style.backgroundColor = isListening ? \"#28a745\" : \"#007bff\",\n      children: isListening ? \"Listening...\" : \"Start Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"At6z51woXUEWe9bG9J4T9RIa3PY=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SpeechToText","onTranscript","_s","isListening","setIsListening","recognition","setRecognition","toggleListening","stop","newRecognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","onstart","onresult","event","result","results","transcript","onerror","console","error","onend","start","style","textAlign","marginTop","children","onClick","padding","borderRadius","backgroundColor","color","border","cursor","transition","boxShadow","onMouseOver","e","currentTarget","onMouseOut","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Học tập/College/CRP/project/Virtual-Assistant-with-Gemini-API-1/fe/src/components/SpeechToText.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface SpeechToTextProps {\r\n  onTranscript: (transcript: string) => void;\r\n}\r\n\r\n// Extend the Window interface to include SpeechRecognition\r\ndeclare global {\r\n  interface Window {\r\n    SpeechRecognition: any;\r\n    webkitSpeechRecognition: any;\r\n  }\r\n}\r\n\r\nconst SpeechToText: React.FC<SpeechToTextProps> = ({ onTranscript }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recognition, setRecognition] = useState<SpeechRecognition | null>(null);\r\n\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      // Stop listening\r\n      recognition?.stop();\r\n    } else {\r\n      // Start listening\r\n      const newRecognition =\r\n        new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n      newRecognition.lang = \"en-US\"; // Set language\r\n      newRecognition.interimResults = false; // Only final results\r\n\r\n      newRecognition.onstart = () => setIsListening(true);\r\n\r\n      newRecognition.onresult = (event: any) => {\r\n        const result = event.results[0][0].transcript;\r\n        onTranscript(result); // Send transcript to parent component\r\n      };\r\n\r\n      newRecognition.onerror = (event: any) => {\r\n        console.error(\"Speech recognition error: \", event.error);\r\n      };\r\n\r\n      newRecognition.onend = () => setIsListening(false);\r\n\r\n      newRecognition.start(); // Start listening\r\n      setRecognition(newRecognition);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <button\r\n        onClick={toggleListening}\r\n        style={{\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"4px\",\r\n          backgroundColor: isListening ? \"#28a745\" : \"#007bff\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n          transition: \"background-color 0.3s ease\",\r\n          boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n        }}\r\n        onMouseOver={(e) => (e.currentTarget.style.backgroundColor = isListening ? \"#218838\" : \"#0056b3\")}\r\n        onMouseOut={(e) => (e.currentTarget.style.backgroundColor = isListening ? \"#28a745\" : \"#007bff\")}\r\n      >\r\n        {isListening ? \"Listening...\" : \"Start Listening\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAMvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAA2B,IAAI,CAAC;EAE9E,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIJ,WAAW,EAAE;MACf;MACAE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACL;MACA,MAAMC,cAAc,GAClB,KAAKC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC;MACpEH,cAAc,CAACI,IAAI,GAAG,OAAO,CAAC,CAAC;MAC/BJ,cAAc,CAACK,cAAc,GAAG,KAAK,CAAC,CAAC;;MAEvCL,cAAc,CAACM,OAAO,GAAG,MAAMX,cAAc,CAAC,IAAI,CAAC;MAEnDK,cAAc,CAACO,QAAQ,GAAIC,KAAU,IAAK;QACxC,MAAMC,MAAM,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;QAC7CnB,YAAY,CAACiB,MAAM,CAAC,CAAC,CAAC;MACxB,CAAC;MAEDT,cAAc,CAACY,OAAO,GAAIJ,KAAU,IAAK;QACvCK,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEN,KAAK,CAACM,KAAK,CAAC;MAC1D,CAAC;MAEDd,cAAc,CAACe,KAAK,GAAG,MAAMpB,cAAc,CAAC,KAAK,CAAC;MAElDK,cAAc,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC;MACxBnB,cAAc,CAACG,cAAc,CAAC;IAChC;EACF,CAAC;EAED,oBACEV,OAAA;IAAK2B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,eACrD9B,OAAA;MACE+B,OAAO,EAAEvB,eAAgB;MACzBmB,KAAK,EAAE;QACLK,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE9B,WAAW,GAAG,SAAS,GAAG,SAAS;QACpD+B,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAE,4BAA4B;QACxCC,SAAS,EAAE;MACb,CAAE;MACFC,WAAW,EAAGC,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACf,KAAK,CAACO,eAAe,GAAG9B,WAAW,GAAG,SAAS,GAAG,SAAW;MAClGuC,UAAU,EAAGF,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACf,KAAK,CAACO,eAAe,GAAG9B,WAAW,GAAG,SAAS,GAAG,SAAW;MAAA0B,QAAA,EAEhG1B,WAAW,GAAG,cAAc,GAAG;IAAiB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAtDIF,YAAyC;AAAA+C,EAAA,GAAzC/C,YAAyC;AAwD/C,eAAeA,YAAY;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}